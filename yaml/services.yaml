apiVersion: v1
kind: Service
metadata:
  name: fleetman-webapp
spec:
  # This defines which pods are going to be represented by this service
  # This service becomes the network endpoint for either other services or
  # external users to connect to (browsers)
  selector:
    app: webapp

  ports:
    # name is just a label
    - name: http
      port: 80
      # targetPort is not necessarily required. If not specified, targetPort will be assigned same as port
      targetPort: 80
      nodePort: 30081

  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway
spec:
  # This defines which pods are going to be represented by this service
  # This service becomes the network endpoint for either other services or
  # external users to connect to (browsers)
  selector:
    app: api-gateway

  ports:
    # name is just a label
    - name: http
      port: 8080
      nodePort: 30020


  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: fleetman-queue
spec:
  # This defines which pods are going to be represented by this service
  # This service becomes the network endpoint for either other services or
  # external users to connect to (browsers)
  selector:
    app: queue

  ports:
    # name is just a label
    - name: http
      port: 8161
      nodePort: 30010

    - name: endpoint
      port: 61616
  type: NodePort

--- 

apiVersion: v1
kind: Service
metadata:
  name: fleetman-position-tracker
spec:
  # This defines which pods are going to be represented by this service
  # This service becomes the network endpoint for either other services or
  # external users to connect to (browsers)
  selector:
    app: position-tracker

  ports:
    # name is just a label
    - name: http
      port: 8080

  type: ClusterIP
